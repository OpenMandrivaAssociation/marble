From 4d98f8bcc51fcabc103a0b8affd8259eef3d196b Mon Sep 17 00:00:00 2001
From: Gilles Caulier <caulier.gilles@gmail.com>
Date: Tue, 19 Sep 2023 07:59:30 +0200
Subject: [PATCH] qt6++

---
 examples/cpp/animation-video/main.cpp               |  2 +-
 examples/cpp/marble-game/ClickOnThat.cpp            |  5 +++--
 examples/cpp/marble-game/CountryByFlag.cpp          | 13 +++++++------
 examples/cpp/marble-game/CountryByShape.cpp         | 13 +++++++------
 examples/cpp/marble-game/GameMainWindow.cpp         |  4 ++--
 examples/cpp/marble-game/GameMainWindow.h           |  2 +-
 .../cpp/squad-interpolation/squad-interpolation.cpp |  5 +++--
 examples/cpp/tour-preview/tour-preview.cpp          |  2 +-
 8 files changed, 25 insertions(+), 21 deletions(-)

diff --git a/examples/cpp/animation-video/main.cpp b/examples/cpp/animation-video/main.cpp
index 2e46ff652d..e3ecc8b3d4 100644
--- a/examples/cpp/animation-video/main.cpp
+++ b/examples/cpp/animation-video/main.cpp
@@ -83,7 +83,7 @@ void animatedFlight( MarbleWidget *mapWidget )
         printf("[%i%% done]\r", cvRound( (100.0*i)/timeLine.duration() ) );
         fflush(stdout);
         interpolate( mapWidget, timeLine.valueForTime( i ) );
-        QImage screenshot = QPixmap::grabWidget( mapWidget ).toImage().convertToFormat( QImage::Format_RGB888 );
+        QImage screenshot = mapWidget->grab().toImage().convertToFormat( QImage::Format_RGB888 );
         Mat converter( frameSize, CV_8UC3 );
         converter.data = screenshot.bits();
         cvtColor( converter, buffer, COLOR_RGB2BGR );
diff --git a/examples/cpp/marble-game/ClickOnThat.cpp b/examples/cpp/marble-game/ClickOnThat.cpp
index b74c1ce1fb..44d6f2adda 100644
--- a/examples/cpp/marble-game/ClickOnThat.cpp
+++ b/examples/cpp/marble-game/ClickOnThat.cpp
@@ -12,6 +12,7 @@
 #include <QVariant>
 #include <QStringList>
 #include <QDir>
+#include <QRandomGenerator>
 
 // Marble
 #include <marble/MarbleWidget.h>
@@ -220,13 +221,13 @@ void ClickOnThat::postQuestion( QObject *gameObject )
     QVector<GeoDataPlacemark*> countryPlacemarks = d->m_countryNames->placemarkList();
 
     uint randomSeed = uint(QTime::currentTime().msec());
-    qsrand( randomSeed );
+    QRandomGenerator::global()->seed(randomSeed);
 
     GeoDataPlacemark *placemark = nullptr;
     GeoDataPoint *point = nullptr;
     bool found = false;
     while( !found ) {
-        placemark = countryPlacemarks[qrand()%countryPlacemarks.size()];
+        placemark = countryPlacemarks[QRandomGenerator::global()->generate()%countryPlacemarks.size()];
         if ( !d->m_continentsAndOceans.contains(placemark->name(), Qt::CaseSensitive) ) {
             found = true;
             point = dynamic_cast<GeoDataPoint*>( placemark->geometry() );
diff --git a/examples/cpp/marble-game/CountryByFlag.cpp b/examples/cpp/marble-game/CountryByFlag.cpp
index a12e80151a..434e45e5d2 100644
--- a/examples/cpp/marble-game/CountryByFlag.cpp
+++ b/examples/cpp/marble-game/CountryByFlag.cpp
@@ -13,6 +13,7 @@
 #include <QVector>
 #include <QVariant>
 #include <QVariantList>
+#include <QRandomGenerator>
 
 // Marble
 #include <marble/MarbleWidget.h>
@@ -122,7 +123,7 @@ void CountryByFlag::postQuestion( QObject *gameObject )
     QVector<GeoDataPlacemark*> countryPlacemarks = d->m_countryNames->placemarkList();
 
     uint randomSeed = uint(QTime::currentTime().msec());
-    qsrand( randomSeed );
+    QRandomGenerator::global()->seed(randomSeed);
 
     bool found = false;
     GeoDataPlacemark *placemark = nullptr;
@@ -130,7 +131,7 @@ void CountryByFlag::postQuestion( QObject *gameObject )
     QString flagPath;
 
     while ( !found ) {
-        int randomIndex = qrand()%countryPlacemarks.size();
+        int randomIndex = QRandomGenerator::global()->generate()%countryPlacemarks.size();
         placemark = countryPlacemarks[randomIndex];
 
         if ( !d->m_continentsAndOceans.contains(placemark->name(), Qt::CaseSensitive) ) {
@@ -145,13 +146,13 @@ void CountryByFlag::postQuestion( QObject *gameObject )
     }
 
     answerOptions << placemark->name()
-    << countryPlacemarks[qrand()%countryPlacemarks.size()]->name()
-    << countryPlacemarks[qrand()%countryPlacemarks.size()]->name()
-    << countryPlacemarks[qrand()%countryPlacemarks.size()]->name();
+    << countryPlacemarks[QRandomGenerator::global()->generate()%countryPlacemarks.size()]->name()
+    << countryPlacemarks[QRandomGenerator::global()->generate()%countryPlacemarks.size()]->name()
+    << countryPlacemarks[QRandomGenerator::global()->generate()%countryPlacemarks.size()]->name();
 
     // Randomize the options in the list answerOptions
     for ( int i = 0; i < answerOptions.size(); ++i ) {
-        QVariant option = answerOptions.takeAt( qrand()%answerOptions.size() );
+        QVariant option = answerOptions.takeAt( QRandomGenerator::global()->generate()%answerOptions.size() );
         answerOptions.append( option );
     }
     if ( gameObject ) {
diff --git a/examples/cpp/marble-game/CountryByShape.cpp b/examples/cpp/marble-game/CountryByShape.cpp
index 3d154077cb..e45e151557 100644
--- a/examples/cpp/marble-game/CountryByShape.cpp
+++ b/examples/cpp/marble-game/CountryByShape.cpp
@@ -13,6 +13,7 @@
 #include <QVariant>
 #include <QVariantList>
 #include <QFileInfo>
+#include <QRandomGenerator>
 
 // Marble
 #include <marble/MarbleWidget.h>
@@ -151,7 +152,7 @@ void CountryByShape::postQuestion( QObject *gameObject )
     QVector<GeoDataPlacemark*> countryPlacemarks = d->m_countryNames->placemarkList();
 
     uint randomSeed = uint(QTime::currentTime().msec());
-    qsrand( randomSeed );
+    QRandomGenerator::global()->seed(randomSeed);
 
     bool found = false;
     GeoDataPlacemark *placemark =nullptr;
@@ -160,7 +161,7 @@ void CountryByShape::postQuestion( QObject *gameObject )
     GeoDataLatLonAltBox box;
     QVariantList answerOptions;
     while ( !found ) {
-        int randomIndex = qrand()%countryPlacemarks.size();
+        int randomIndex = QRandomGenerator::global()->generate()%countryPlacemarks.size();
         placemark = countryPlacemarks[randomIndex];
         point = dynamic_cast<GeoDataPoint*>( placemark->geometry() );
         coord = point->coordinates();
@@ -237,13 +238,13 @@ void CountryByShape::postQuestion( QObject *gameObject )
     d->m_marbleWidget->centerOn( box, true );
 
     answerOptions << placemark->name()
-    << countryPlacemarks[qrand()%countryPlacemarks.size()]->name()
-    << countryPlacemarks[qrand()%countryPlacemarks.size()]->name()
-    << countryPlacemarks[qrand()%countryPlacemarks.size()]->name();
+    << countryPlacemarks[QRandomGenerator::global()->generate()%countryPlacemarks.size()]->name()
+    << countryPlacemarks[QRandomGenerator::global()->generate()%countryPlacemarks.size()]->name()
+    << countryPlacemarks[QRandomGenerator::global()->generate()%countryPlacemarks.size()]->name();
 
     // Randomize options in list answerOptions
     for ( int i = 0; i < answerOptions.size(); ++i ) {
-        QVariant option = answerOptions.takeAt( qrand()%answerOptions.size() );
+        QVariant option = answerOptions.takeAt( QRandomGenerator::global()->generate()%answerOptions.size() );
         answerOptions.append( option );
     }
 
diff --git a/examples/cpp/marble-game/GameMainWindow.cpp b/examples/cpp/marble-game/GameMainWindow.cpp
index 7e3731e268..97d46da941 100644
--- a/examples/cpp/marble-game/GameMainWindow.cpp
+++ b/examples/cpp/marble-game/GameMainWindow.cpp
@@ -136,8 +136,8 @@ void Private::setupGameSignals()
     }
 }
 
-MainWindow::MainWindow( const QString &marbleDataPath, QWidget *parent, Qt::WindowFlags flags ) :
-    QMainWindow( parent, flags ),
+MainWindow::MainWindow( const QString &marbleDataPath, QWidget *parent) :
+    QMainWindow( parent),
     d( new Private( this ) )
 {
     d->setupUi( this );
diff --git a/examples/cpp/marble-game/GameMainWindow.h b/examples/cpp/marble-game/GameMainWindow.h
index ee5152322c..6d18402011 100644
--- a/examples/cpp/marble-game/GameMainWindow.h
+++ b/examples/cpp/marble-game/GameMainWindow.h
@@ -21,7 +21,7 @@ class MainWindow: public QMainWindow
 {
     Q_OBJECT
 public:
-    explicit MainWindow( const QString &marbleDataPath, QWidget *parent = nullptr, Qt::WindowFlags flags = nullptr );
+    explicit MainWindow( const QString &marbleDataPath, QWidget *parent = nullptr);
     ~MainWindow() override;
     MarbleWidget *marbleWidget();
 
diff --git a/examples/cpp/squad-interpolation/squad-interpolation.cpp b/examples/cpp/squad-interpolation/squad-interpolation.cpp
index e101ec6e71..34d0d90275 100644
--- a/examples/cpp/squad-interpolation/squad-interpolation.cpp
+++ b/examples/cpp/squad-interpolation/squad-interpolation.cpp
@@ -17,6 +17,7 @@
 #include <marble/ViewportParams.h>
 
 #include <QTimer>
+#include <QRandomGenerator>
 
 namespace Marble
 {
@@ -109,7 +110,7 @@ bool MyPaintLayer::render ( GeoPainter *painter, ViewportParams *viewport, const
     for ( int i = 0; i < m_cities.size(); ++i ) {
         qreal x, y;
         QString const text = QString::number ( m_index + i );
-        int const w = painter->fontMetrics().width( text );
+        int const w = painter->fontMetrics().horizontalAdvance( text );
         painter->setPen ( Qt::NoPen );
         painter->drawEllipse ( m_cities[i], 1.5*w, 1.5*h );
         painter->setPen ( QColor ( Marble::Oxygen::aluminumGray4 ) );
@@ -148,7 +149,7 @@ void MyPaintLayer::addRandomCity ( double minDistance, double maxDistance )
         if (const auto document = geodata_cast<GeoDataDocument>(object)) {
             if (document->name() == QLatin1String("cityplacemarks")) {
                 QVector<GeoDataPlacemark*> placemarks = document->placemarkList();
-                for ( int i = qrand() % placemarks.size(); i < placemarks.size(); ++i ) {
+                for ( int i = QRandomGenerator::global()->generate() % placemarks.size(); i < placemarks.size(); ++i ) {
                     const double distance = EARTH_RADIUS * m_cities.last().sphericalDistanceTo(placemarks[i]->coordinate());
                     if ( distance >= minDistance && distance <= maxDistance ) {
                         m_cities << placemarks[i]->coordinate();
diff --git a/examples/cpp/tour-preview/tour-preview.cpp b/examples/cpp/tour-preview/tour-preview.cpp
index 753d744a95..1b2ae67599 100644
--- a/examples/cpp/tour-preview/tour-preview.cpp
+++ b/examples/cpp/tour-preview/tour-preview.cpp
@@ -115,7 +115,7 @@ void animatedFlight( MarbleWidget *mapWidget, GeoDataTour* tour )
         fflush(stdout);
 
         playback->seek( position );
-        QImage screenshot = QPixmap::grabWidget( mapWidget ).toImage().convertToFormat( QImage::Format_RGB888 );
+        QImage screenshot = mapWidget->grab().toImage().convertToFormat( QImage::Format_RGB888 );
         Mat converter( frameSize, CV_8UC3 );
         converter.data = screenshot.bits();
         cvtColor( converter, buffer, COLOR_RGB2BGR );
-- 
GitLab

