From 43b04faaa21f39c9ab0a7d213bedf72de83622b8 Mon Sep 17 00:00:00 2001
From: Gilles Caulier <caulier.gilles@gmail.com>
Date: Mon, 18 Sep 2023 09:43:10 +0200
Subject: [PATCH] qt6++

---
 PORT.QT6                            | 2 +-
 src/lib/marble/GeoGraphicsScene.cpp | 4 ++--
 src/lib/marble/MarbleLineEdit.cpp   | 5 +++--
 src/lib/marble/NewstuffModel.cpp    | 4 ++--
 src/lib/marble/StyleBuilder.cpp     | 4 ++--
 5 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/PORT.QT6 b/PORT.QT6
index ef1d5865b5..652b031eb8 100644
--- a/PORT.QT6
+++ b/PORT.QT6
@@ -76,7 +76,7 @@ DIRECTORIES                                         STATUS
 │   │   ├── astro
 │   │   └── marble
 │   │       ├── blendings                           DONE
-│   │       ├── cloudsync
+│   │       ├── cloudsync                           DONE
 │   │       ├── declarative
 │   │       ├── geodata
 │   │       │   ├── data                            DONE
diff --git a/src/lib/marble/GeoGraphicsScene.cpp b/src/lib/marble/GeoGraphicsScene.cpp
index 2bb992d863..e80e42ac3d 100644
--- a/src/lib/marble/GeoGraphicsScene.cpp
+++ b/src/lib/marble/GeoGraphicsScene.cpp
@@ -37,7 +37,7 @@ public:
     }
 
     typedef QHash<const GeoDataFeature*,GeoGraphicsItem*> FeatureItemMap;
-    QHash<TileId, FeatureItemMap> m_tiledItems;
+    QMultiHash<TileId, FeatureItemMap> m_tiledItems;
     QMultiHash<const GeoDataFeature*, TileId> m_features; // multi hash because multi track and multi geometry insert multiple items
 
     // Stores the items which have been clicked;
@@ -268,7 +268,7 @@ void GeoGraphicsScene::addItem( GeoGraphicsItem* item )
 
     auto & tileList = d->m_tiledItems[key];
     auto feature = item->feature();
-    tileList.insertMulti(feature, item);
+    tileList.insert(feature, item);
     d->m_features.insert(feature, key );
 }
 
diff --git a/src/lib/marble/MarbleLineEdit.cpp b/src/lib/marble/MarbleLineEdit.cpp
index bb066e697a..705d39a7a6 100644
--- a/src/lib/marble/MarbleLineEdit.cpp
+++ b/src/lib/marble/MarbleLineEdit.cpp
@@ -17,6 +17,7 @@
 #include <QMouseEvent>
 #include <QPainter>
 #include <QTimer>
+#include <QPixmap>
 
 namespace Marble
 {
@@ -137,7 +138,7 @@ void MarbleLineEdit::setBusy(bool busy)
 void MarbleLineEdit::updateClearButtonIcon( const QString& text )
 {
     d->m_clearButton->setVisible( text.length() > 0 );
-    if ( d->m_clearButton->pixmap() && !d->m_clearButton->pixmap()->isNull() ) {
+    if ( !d->m_clearButton->pixmap().isNull() ) {
         return;
     }
 
@@ -151,7 +152,7 @@ void MarbleLineEdit::updateClearButton()
 {
     const QSize geom = size();
     const int frameWidth = style()->pixelMetric( QStyle::PM_DefaultFrameWidth, nullptr, this );
-    const int pixmapSize = d->m_clearButton->pixmap()->width() + 1;
+    const int pixmapSize = d->m_clearButton->pixmap().width() + 1;
     const int decoratorSize = d->m_decoratorPixmap.width() + 1;
 
     int y = ( geom.height() - pixmapSize ) / 2;
diff --git a/src/lib/marble/NewstuffModel.cpp b/src/lib/marble/NewstuffModel.cpp
index c5c7163e53..459f50d2e9 100644
--- a/src/lib/marble/NewstuffModel.cpp
+++ b/src/lib/marble/NewstuffModel.cpp
@@ -897,7 +897,7 @@ void NewstuffModelPrivate::processQueue()
     }
     if ( m_currentAction.second == Install ) {
         if ( !m_currentFile ) {
-            QFileInfo const file = m_items.at( m_currentAction.first ).m_payloadUrl.path();
+            QFileInfo const file = QFileInfo(m_items.at( m_currentAction.first ).m_payloadUrl.path());
             m_currentFile = new QTemporaryFile(QDir::tempPath() + QLatin1String("/marble-XXXXXX-") + file.fileName());
         }
 
@@ -918,7 +918,7 @@ void NewstuffModelPrivate::processQueue()
         QObject::connect( watcher, SIGNAL(finished()), m_parent, SLOT(mapUninstalled()) );
         QObject::connect( watcher, SIGNAL(finished()), watcher, SLOT(deleteLater()) );
 
-        QFuture<void> future = QtConcurrent::run( this, &NewstuffModelPrivate::uninstall, m_currentAction.first );
+        QFuture<void> future = QtConcurrent::run( &NewstuffModelPrivate::uninstall, this, m_currentAction.first );
         watcher->setFuture( future );
     }
 }
diff --git a/src/lib/marble/StyleBuilder.cpp b/src/lib/marble/StyleBuilder.cpp
index fc3671b9c8..13d2bfcbd8 100644
--- a/src/lib/marble/StyleBuilder.cpp
+++ b/src/lib/marble/StyleBuilder.cpp
@@ -437,7 +437,7 @@ GeoDataStyle::ConstPtr StyleBuilder::Private::createPlacemarkStyle(const StylePa
                 accessValue == QLatin1String("delivery") ||
                 accessValue == QLatin1String("forestry")) {
                 QColor polyColor = polyStyle.color();
-                qreal hue, sat, val;
+                float hue, sat, val;
                 polyColor.getHsvF(&hue, &sat, &val);
                 polyColor.setHsvF(0.98, qMin(1.0, 0.2 + sat), val);
                 polyStyle.setColor(effectColor(polyColor));
@@ -446,7 +446,7 @@ GeoDataStyle::ConstPtr StyleBuilder::Private::createPlacemarkStyle(const StylePa
 
             if (osmData.containsTag("tunnel", "yes")) {
                 QColor polyColor = polyStyle.color();
-                qreal hue, sat, val;
+                float hue, sat, val;
                 polyColor.getHsvF(&hue, &sat, &val);
                 polyColor.setHsvF(hue, 0.25 * sat, 0.95 * val);
                 polyStyle.setColor(effectColor(polyColor));
-- 
GitLab

