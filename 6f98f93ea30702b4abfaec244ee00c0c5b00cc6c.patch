From 6f98f93ea30702b4abfaec244ee00c0c5b00cc6c Mon Sep 17 00:00:00 2001
From: Gilles Caulier <caulier.gilles@gmail.com>
Date: Mon, 18 Sep 2023 17:56:50 +0200
Subject: [PATCH] Qt6++: fix broken signal slots connection with QComboBox

---
 src/lib/marble/CurrentLocationWidget.cpp | 41 +++++++++++++++---------
 src/lib/marble/CurrentLocationWidget.h   |  9 ++++--
 2 files changed, 31 insertions(+), 19 deletions(-)

diff --git a/src/lib/marble/CurrentLocationWidget.cpp b/src/lib/marble/CurrentLocationWidget.cpp
index fa3357b57c..db4ff9e6d6 100644
--- a/src/lib/marble/CurrentLocationWidget.cpp
+++ b/src/lib/marble/CurrentLocationWidget.cpp
@@ -51,8 +51,6 @@ class CurrentLocationWidgetPrivate
 
     void receiveGpsCoordinates( const GeoDataCoordinates &position, qreal speed );
     void adjustPositionTrackingStatus( PositionProviderStatus status );
-    void changePositionProvider( const QString &provider );
-    void trackPlacemark();
     void centerOnCurrentLocation();
     void updateRecenterComboBox( AutoNavigation::CenterMode centerMode );
     void updateAutoZoomCheckBox( bool autoZoom );
@@ -126,8 +124,8 @@ void CurrentLocationWidget::setMarbleWidget( MarbleWidget *widget )
     disconnect( d->m_widget->model()->positionTracking(),
              SIGNAL(positionProviderPluginChanged(PositionProviderPlugin*)),
              this, SLOT(updateActivePositionProvider(PositionProviderPlugin*)) );
-    disconnect( d->m_currentLocationUi.positionTrackingComboBox, SIGNAL(currentIndexChanged(QString)),
-             this, SLOT(changePositionProvider(QString)) );
+    disconnect( d->m_currentLocationUi.positionTrackingComboBox, SIGNAL(currentIndexChanged(int)),
+             this, SLOT(changePositionProvider(int)) );
     disconnect( d->m_currentLocationUi.locationLabel, SIGNAL(linkActivated(QString)),
              this, SLOT(centerOnCurrentLocation()) );
     disconnect( d->m_widget->model()->positionTracking(),
@@ -145,8 +143,8 @@ void CurrentLocationWidget::setMarbleWidget( MarbleWidget *widget )
              SIGNAL(positionProviderPluginChanged(PositionProviderPlugin*)),
              this, SLOT(updateActivePositionProvider(PositionProviderPlugin*)) );
     d->updateActivePositionProvider( d->m_widget->model()->positionTracking()->positionProviderPlugin() );
-    connect( d->m_currentLocationUi.positionTrackingComboBox, SIGNAL(currentIndexChanged(QString)),
-             this, SLOT(changePositionProvider(QString)) );
+    connect( d->m_currentLocationUi.positionTrackingComboBox, SIGNAL(currentIndexChanged(int)),
+             this, SLOT(changePositionProvider(int)) );
     connect( d->m_currentLocationUi.locationLabel, SIGNAL(linkActivated(QString)),
              this, SLOT(centerOnCurrentLocation()) );
     connect( d->m_widget->model()->positionTracking(),
@@ -310,29 +308,40 @@ void CurrentLocationWidgetPrivate::receiveGpsCoordinates( const GeoDataCoordinat
     m_currentLocationUi.clearTrackButton->setEnabled( true );
 }
 
-void CurrentLocationWidgetPrivate::changePositionProvider( const QString &provider )
+void CurrentLocationWidget::changePositionProvider( int index )
 {
-    for( const PositionProviderPlugin* plugin: m_positionProviderPlugins ) {
+    QComboBox* const combo = dynamic_cast<QComboBox*>(sender());
+
+    if (!combo) return;
+
+    QString provider = combo->itemText(index);
+
+    changePositionProvider(provider);
+}
+
+void CurrentLocationWidget::changePositionProvider( const QString& provider )
+{
+    for( const PositionProviderPlugin* plugin: d->m_positionProviderPlugins ) {
         if ( plugin->guiString() == provider ) {
-            m_currentLocationUi.locationLabel->setEnabled( true );
+            d->m_currentLocationUi.locationLabel->setEnabled( true );
             PositionProviderPlugin* instance = plugin->newInstance();
-            PositionTracking *tracking = m_widget->model()->positionTracking();
+            PositionTracking *tracking = d->m_widget->model()->positionTracking();
             tracking->setPositionProviderPlugin( instance );
-            m_widget->update();
+            d->m_widget->update();
             return;
         }
     }
 
     // requested provider not found -> disable position tracking
-    m_currentLocationUi.locationLabel->setEnabled( false );
-    m_widget->model()->positionTracking()->setPositionProviderPlugin( nullptr );
-    m_widget->update();
+    d->m_currentLocationUi.locationLabel->setEnabled( false );
+    d->m_widget->model()->positionTracking()->setPositionProviderPlugin( nullptr );
+    d->m_widget->update();
 }
 
-void CurrentLocationWidgetPrivate::trackPlacemark()
+void CurrentLocationWidget::trackPlacemark()
 {
     changePositionProvider( QObject::tr( "Placemark" ) );
-    m_adjustNavigation->setRecenter( AutoNavigation::AlwaysRecenter );
+    d->m_adjustNavigation->setRecenter( AutoNavigation::AlwaysRecenter );
 }
 
 void CurrentLocationWidget::setRecenterMode( int mode )
diff --git a/src/lib/marble/CurrentLocationWidget.h b/src/lib/marble/CurrentLocationWidget.h
index eb52d1b723..31f2a795ab 100644
--- a/src/lib/marble/CurrentLocationWidget.h
+++ b/src/lib/marble/CurrentLocationWidget.h
@@ -60,17 +60,20 @@ class MARBLE_EXPORT CurrentLocationWidget : public QWidget
     void setLastSavePath( const QString &path );
 
  private:
+
+    void changePositionProvider( const QString& provider );
+
+    Q_SLOT void changePositionProvider( int index );
+    Q_SLOT void trackPlacemark();
+
     Q_DISABLE_COPY( CurrentLocationWidget )
 
     CurrentLocationWidgetPrivate * const d;
 
     Q_PRIVATE_SLOT( d, void receiveGpsCoordinates( const GeoDataCoordinates &in, qreal speed ) )
     Q_PRIVATE_SLOT( d, void adjustPositionTrackingStatus( PositionProviderStatus status ) )
-    Q_PRIVATE_SLOT( d, void changePositionProvider( const QString &provider ) )
     Q_PRIVATE_SLOT( d, void centerOnCurrentLocation() )
 
-    Q_PRIVATE_SLOT( d, void trackPlacemark() )
-
     /**
      * @brief Slot for setting re-center combobox if re-centering is enabled other than from CurrentLocationWidget
      * @see RoutingPlugin
-- 
GitLab

