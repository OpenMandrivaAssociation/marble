From faabe5e7531edf28300df8659ac4ff402478f0d3 Mon Sep 17 00:00:00 2001
From: Gilles Caulier <caulier.gilles@gmail.com>
Date: Mon, 18 Sep 2023 09:17:27 +0200
Subject: [PATCH] qt6++

---
 src/apps/marble-ui/ControlView.cpp                  |  2 +-
 src/lib/marble/AbstractDataPluginModel.cpp          |  4 ++--
 src/lib/marble/AbstractDataPluginModel.h            |  8 ++++----
 src/lib/marble/CurrentLocationWidget.cpp            |  2 +-
 src/lib/marble/FileViewWidget.cpp                   |  2 +-
 src/lib/marble/GeoUriParser.cpp                     |  1 +
 src/lib/marble/LegendWidget.cpp                     |  2 +-
 src/lib/marble/MapThemeSortFilterProxyModel.cpp     |  2 +-
 src/lib/marble/MapViewWidget.cpp                    |  6 ++++--
 src/lib/marble/MapWizard.cpp                        |  2 +-
 src/lib/marble/MarbleInputHandler.cpp               | 12 ++++++------
 src/lib/marble/MarbleLegendBrowser.cpp              | 13 ++++++++-----
 src/lib/marble/MarblePlacemarkModel_P.h             |  4 ++--
 src/lib/marble/NewstuffModel.cpp                    |  2 +-
 src/lib/marble/PlacemarkLayout.cpp                  |  2 +-
 src/lib/marble/PluginManager.cpp                    |  2 +-
 src/lib/marble/PopupItem.cpp                        | 10 +++++-----
 .../RouteSimulationPositionProviderPlugin.cpp       |  7 ++++---
 src/lib/marble/SearchRunner.h                       |  3 ++-
 src/lib/marble/SearchWidget.cpp                     |  2 +-
 src/lib/marble/TileLoader.cpp                       |  4 ++--
 src/lib/marble/TourWidget.cpp                       |  2 +-
 src/lib/marble/VisiblePlacemark.cpp                 |  4 ++--
 src/lib/marble/cloudsync/BookmarkSyncManager.cpp    |  2 +-
 src/lib/marble/declarative/RouteRelationModel.cpp   |  4 ++--
 .../handlers/kml/KmlCoordinatesTagHandler.cpp       |  2 +-
 src/lib/marble/routing/RoutingInputWidget.cpp       |  2 +-
 src/lib/marble/routing/RoutingModel.cpp             |  1 +
 src/lib/marble/routing/RoutingWidget.cpp            |  4 ++--
 .../routing/instructions/RoutingInstruction.cpp     |  1 +
 .../ElevationProfileDataSource.cpp                  |  2 +-
 src/plugins/render/photo/PhotoPlugin.cpp            |  2 +-
 src/plugins/render/weather/WeatherItem.cpp          |  2 +-
 src/plugins/render/weather/WeatherPlugin.cpp        |  2 +-
 src/plugins/runner/gpx/tests/TestTrack.cpp          |  8 ++++----
 .../runner/local-osm-search/DatabaseQuery.cpp       |  2 +-
 36 files changed, 71 insertions(+), 61 deletions(-)

diff --git a/src/apps/marble-ui/ControlView.cpp b/src/apps/marble-ui/ControlView.cpp
index 7f186d8d2c..1ca09000a4 100644
--- a/src/apps/marble-ui/ControlView.cpp
+++ b/src/apps/marble-ui/ControlView.cpp
@@ -103,7 +103,7 @@ ControlView::ControlView( QWidget *parent )
 
     QVBoxLayout* layout = new QVBoxLayout;
     layout->addWidget( m_marbleWidget );
-    layout->setMargin( 0 );
+    layout->setContentsMargins( 0, 0, 0, 0 );
     setLayout( layout );
 
     m_cloudSyncManager = new CloudSyncManager( this );
diff --git a/src/lib/marble/AbstractDataPluginModel.cpp b/src/lib/marble/AbstractDataPluginModel.cpp
index 98c9724fc5..74f0f4cbfe 100644
--- a/src/lib/marble/AbstractDataPluginModel.cpp
+++ b/src/lib/marble/AbstractDataPluginModel.cpp
@@ -280,8 +280,8 @@ QList<AbstractDataPluginItem*> AbstractDataPluginModel::items( const ViewportPar
     GeoDataLatLonAltBox currentBox = viewport->viewLatLonAltBox();
     QList<AbstractDataPluginItem*> list;
     
-    Q_ASSERT( !d->m_displayedItems.contains( 0 ) && "Null item in m_displayedItems. Please report a bug to marble-devel@kde.org" );
-    Q_ASSERT( !d->m_itemSet.contains( 0 ) && "Null item in m_itemSet. Please report a bug to marble-devel@kde.org" );
+    Q_ASSERT( !d->m_displayedItems.contains( nullptr ) && "Null item in m_displayedItems. Please report a bug to marble-devel@kde.org" );
+    Q_ASSERT( !d->m_itemSet.contains( nullptr ) && "Null item in m_itemSet. Please report a bug to marble-devel@kde.org" );
 
     QList<AbstractDataPluginItem*> candidates = d->m_displayedItems + d->m_itemSet;
 
diff --git a/src/lib/marble/AbstractDataPluginModel.h b/src/lib/marble/AbstractDataPluginModel.h
index 9f78b37638..784de0d328 100644
--- a/src/lib/marble/AbstractDataPluginModel.h
+++ b/src/lib/marble/AbstractDataPluginModel.h
@@ -12,10 +12,10 @@
 
 #include "marble_export.h"
 
-class QPoint;
-class QUrl;
-class QString;
-class QStringList;
+#include <QPoint>
+#include <QUrl>
+#include <QString>
+#include <QStringList>
 
 namespace Marble
 {
diff --git a/src/lib/marble/CurrentLocationWidget.cpp b/src/lib/marble/CurrentLocationWidget.cpp
index 1db156c9d5..fa3357b57c 100644
--- a/src/lib/marble/CurrentLocationWidget.cpp
+++ b/src/lib/marble/CurrentLocationWidget.cpp
@@ -78,7 +78,7 @@ CurrentLocationWidget::CurrentLocationWidget( QWidget *parent, Qt::WindowFlags f
       d( new CurrentLocationWidgetPrivate() )
 {
     d->m_currentLocationUi.setupUi( this );
-    layout()->setMargin( 0 );
+    layout()->setContentsMargins( 0, 0, 0, 0 );
 
     connect( d->m_currentLocationUi.recenterComboBox, SIGNAL (currentIndexChanged(int)),
             this, SLOT(setRecenterMode(int)) );
diff --git a/src/lib/marble/FileViewWidget.cpp b/src/lib/marble/FileViewWidget.cpp
index 0938e817d9..d083369e1d 100644
--- a/src/lib/marble/FileViewWidget.cpp
+++ b/src/lib/marble/FileViewWidget.cpp
@@ -79,7 +79,7 @@ FileViewWidget::FileViewWidget( QWidget *parent, Qt::WindowFlags f )
       d( new FileViewWidgetPrivate( this ) )
 {
     d->m_fileViewUi.setupUi( this );
-    layout()->setMargin( 0 );
+    layout()->setContentsMargins( 0, 0, 0, 0 );
 }
 
 FileViewWidget::~FileViewWidget()
diff --git a/src/lib/marble/GeoUriParser.cpp b/src/lib/marble/GeoUriParser.cpp
index 8e8f68c14a..7ccba57626 100644
--- a/src/lib/marble/GeoUriParser.cpp
+++ b/src/lib/marble/GeoUriParser.cpp
@@ -8,6 +8,7 @@
 #include <QString>
 #include <QUrl>
 #include <QUrlQuery>
+#include <QRegExp>
 
 #include "PlanetFactory.h"
 #include "MarbleDebug.h"
diff --git a/src/lib/marble/LegendWidget.cpp b/src/lib/marble/LegendWidget.cpp
index 8ccd5aee5b..b8d67975c0 100644
--- a/src/lib/marble/LegendWidget.cpp
+++ b/src/lib/marble/LegendWidget.cpp
@@ -35,7 +35,7 @@ LegendWidget::LegendWidget( QWidget *parent, Qt::WindowFlags f )
       d( new LegendWidgetPrivate )
 {
     d->setupUi( this );
-    layout()->setMargin( 0 );
+    layout()->setContentsMargins( 0, 0, 0, 0 );
     connect( d->m_marbleLegendBrowser, SIGNAL(tourLinkClicked(QString)),
              this, SIGNAL(tourLinkClicked(QString)) );
 }
diff --git a/src/lib/marble/MapThemeSortFilterProxyModel.cpp b/src/lib/marble/MapThemeSortFilterProxyModel.cpp
index 90fc6b6cd1..537cf26e3b 100644
--- a/src/lib/marble/MapThemeSortFilterProxyModel.cpp
+++ b/src/lib/marble/MapThemeSortFilterProxyModel.cpp
@@ -39,7 +39,7 @@ bool MapThemeSortFilterProxyModel::lessThan ( const QModelIndex & left, const QM
 bool MapThemeSortFilterProxyModel::filterAcceptsRow( int sourceRow, const QModelIndex &sourceParent ) const
  {
      QModelIndex index = sourceModel()->index(sourceRow, 0, sourceParent);
-     return (sourceModel()->data( index, Qt::UserRole + 1 ).toString().contains( filterRegExp() ) );
+     return (sourceModel()->data( index, Qt::UserRole + 1 ).toString().contains( filterRegularExpression() ) );
  }
  
 bool MapThemeSortFilterProxyModel::isFavorite( const QModelIndex& index )
diff --git a/src/lib/marble/MapViewWidget.cpp b/src/lib/marble/MapViewWidget.cpp
index 54e0acef6a..9c7f3c2be2 100644
--- a/src/lib/marble/MapViewWidget.cpp
+++ b/src/lib/marble/MapViewWidget.cpp
@@ -35,6 +35,7 @@
 #include <QToolBar>
 #include <QToolButton>
 #include <QDateTime>
+#include <QRegularExpression>
 
 using namespace Marble;
 // Ui
@@ -217,7 +218,8 @@ class Q_DECL_HIDDEN MapViewWidget::Private {
         const QString selectedId = m_celestialListProxy.data( m_celestialListProxy.index( currentIndex, 1 ) ).toString();
 
         if ( !selectedId.isEmpty() ) {
-            m_mapSortProxy.setFilterRegExp( QRegExp( selectedId, Qt::CaseInsensitive,QRegExp::FixedString ) );
+            m_mapSortProxy.setFilterRegularExpression( QRegularExpression( selectedId ) );     // TODO_QT6: double check
+//            m_mapSortProxy.setFilterRegExp( QRegExp( selectedId, Qt::CaseInsensitive,QRegExp::FixedString ) );
         }
     }
 
@@ -268,7 +270,7 @@ MapViewWidget::MapViewWidget( QWidget *parent, Qt::WindowFlags f )
       d( new Private( this ) )
 {
     d->m_mapViewUi.setupUi( this );
-    layout()->setMargin( 0 );
+    layout()->setContentsMargins( 0, 0, 0, 0 );
 
     if ( MarbleGlobal::getInstance()->profiles() & MarbleGlobal::SmallScreen ) {
         QGridLayout* layout = new QGridLayout;
diff --git a/src/lib/marble/MapWizard.cpp b/src/lib/marble/MapWizard.cpp
index eac8635adc..3c3c577ad0 100644
--- a/src/lib/marble/MapWizard.cpp
+++ b/src/lib/marble/MapWizard.cpp
@@ -160,7 +160,7 @@ PreviewDialog::PreviewDialog( QWidget* parent, const QString& mapThemeId ) : QDi
     
     layout->addWidget( navigator, 1, 1 );
     layout->addWidget( widget, 1, 2 );
-    layout->setMargin( 0 );
+    layout->setContentsMargins( 0, 0, 0, 0 );
     layout->setSpacing( 0 );
     
     this->setLayout( layout );
diff --git a/src/lib/marble/MarbleInputHandler.cpp b/src/lib/marble/MarbleInputHandler.cpp
index 43775c8621..f5fd2af043 100644
--- a/src/lib/marble/MarbleInputHandler.cpp
+++ b/src/lib/marble/MarbleInputHandler.cpp
@@ -330,21 +330,21 @@ bool MarbleDefaultInputHandler::handleWheel(QWheelEvent *wheelevt)
     MarbleAbstractPresenter *marblePresenter = MarbleInputHandler::d->m_marblePresenter;
     marblePresenter->setViewContext(Animation);
 
-    if( (MarbleInputHandler::d->m_steps > 0 && wheelevt->delta() < 0) ||
-        (MarbleInputHandler::d->m_steps < 0 && wheelevt->delta() > 0) )
+    if( (MarbleInputHandler::d->m_steps > 0 && wheelevt->angleDelta().y() < 0) ||
+        (MarbleInputHandler::d->m_steps < 0 && wheelevt->angleDelta().y() > 0) )
     {
-        MarbleInputHandler::d->m_steps = wheelevt->delta();
+        MarbleInputHandler::d->m_steps = wheelevt->angleDelta().y();
     }
     else
     {
-        MarbleInputHandler::d->m_steps += wheelevt->delta();
+        MarbleInputHandler::d->m_steps += wheelevt->angleDelta().y();
     }
 
     if (marblePresenter->map()->discreteZoom())
     {
         if(qAbs(MarbleInputHandler::d->m_steps) >= MarbleInputHandler::d->m_discreteZoomSteps)
         {
-            marblePresenter->zoomAtBy(wheelevt->pos(), MarbleInputHandler::d->m_steps);
+            marblePresenter->zoomAtBy(wheelevt->position().toPoint(), MarbleInputHandler::d->m_steps);
             MarbleInputHandler::d->m_steps = 0;
         }
     }
@@ -359,7 +359,7 @@ bool MarbleDefaultInputHandler::handleWheel(QWheelEvent *wheelevt)
         }
         qreal newDistance = marblePresenter->distanceFromZoom(zoom + MarbleInputHandler::d->m_steps);
         MarbleInputHandler::d->m_wheelZoomTargetDistance = newDistance;
-        marblePresenter->zoomAt(wheelevt->pos(), newDistance);
+        marblePresenter->zoomAt(wheelevt->position().toPoint(), newDistance);
         if (MarbleInputHandler::d->m_inertialEarthRotation)
         {
             d->m_kineticSpinning.jumpToPosition(MarbleInputHandler::d->m_marblePresenter->centerLongitude(),
diff --git a/src/lib/marble/MarbleLegendBrowser.cpp b/src/lib/marble/MarbleLegendBrowser.cpp
index 4b8fe2ced8..8cf023278a 100644
--- a/src/lib/marble/MarbleLegendBrowser.cpp
+++ b/src/lib/marble/MarbleLegendBrowser.cpp
@@ -14,7 +14,7 @@
 #include <QFile>
 #include <QMouseEvent>
 #include <QPainter>
-#include <QRegExp>
+#include <QRegularExpression>
 
 #ifndef MARBLE_NO_WEBKITWIDGETS
 #include <QWebEnginePage>
@@ -210,11 +210,14 @@ void MarbleLegendBrowser::translateHtml( QString & html )
 {
     // must match string extraction in Messages.sh
     QString s = html;
-    QRegExp rx( "</?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*\"|'.*'|[^'\">\\s]+))?)+\\s*|\\s*)/?>" );
+    QRegularExpression rx( "</?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*\"|'.*'|[^'\">\\s]+))?)+\\s*|\\s*)/?>", QRegularExpression::InvertedGreedinessOption );   // PORT_QT6: double check
+/*
+    QRegExp rx( "</?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*\"|'.*'|[^'\">\\s]+))?)+\\s*|\\s*)/?>");
     rx.setMinimal( true );
-    s.replace( rx, "\n" );
-    s.replace( QRegExp( "\\s*\n\\s*" ), "\n" );
-    const QStringList words = s.split(QLatin1Char('\n'), QString::SkipEmptyParts);
+*/
+    s.replace( rx, QLatin1String("\n") );
+    s.replace( QRegularExpression( "\\s*\n\\s*" ), "\n" );
+    const QStringList words = s.split(QLatin1Char('\n'), Qt::SkipEmptyParts);
 
     QStringList::const_iterator i = words.constBegin();
     QStringList::const_iterator const end = words.constEnd();
diff --git a/src/lib/marble/MarblePlacemarkModel_P.h b/src/lib/marble/MarblePlacemarkModel_P.h
index 8e9603dad0..c0eacce9a5 100644
--- a/src/lib/marble/MarblePlacemarkModel_P.h
+++ b/src/lib/marble/MarblePlacemarkModel_P.h
@@ -7,7 +7,7 @@
 #define MARBLE_MARBLEPLACEMARKMODEL_P_H
 
 #include <QChar>
-#include <QRegExp>
+#include <QRegularExpression>
 #include <QString>
 
 namespace Marble
@@ -15,7 +15,7 @@ namespace Marble
 
 namespace GeoString
 {
-    static const QRegExp combiningDiacriticalMarks("[\\x0300-\\x036F]+");
+    static const QRegularExpression combiningDiacriticalMarks("[\\x0300-\\x036F]+");
 
     QString deaccent( const QString& accentString )
     {
diff --git a/src/lib/marble/NewstuffModel.cpp b/src/lib/marble/NewstuffModel.cpp
index 0e867556f3..c5c7163e53 100644
--- a/src/lib/marble/NewstuffModel.cpp
+++ b/src/lib/marble/NewstuffModel.cpp
@@ -816,7 +816,7 @@ void NewstuffModel::mapUninstalled()
 void NewstuffModel::contentsListed( int exitStatus )
 {
     if ( exitStatus == 0 ) {
-        QStringList const files = QString(d->m_unpackProcess->readAllStandardOutput()).split(QLatin1Char('\n'), QString::SkipEmptyParts);
+        QStringList const files = QString(d->m_unpackProcess->readAllStandardOutput()).split(QLatin1Char('\n'), Qt::SkipEmptyParts);
         d->updateRegistry(files);
 
         QObject::disconnect( d->m_unpackProcess, SIGNAL(finished(int)),
diff --git a/src/lib/marble/PlacemarkLayout.cpp b/src/lib/marble/PlacemarkLayout.cpp
index a66a1f46c7..7f8ce48566 100644
--- a/src/lib/marble/PlacemarkLayout.cpp
+++ b/src/lib/marble/PlacemarkLayout.cpp
@@ -643,7 +643,7 @@ QRectF PlacemarkLayout::roomForLabel( const GeoDataStyle::ConstPtr &style,
 
     int textWidth;
     if ( style->labelStyle().glow() ) {
-        labelFont.setWeight( 75 ); // Needed to calculate the correct pixmap size;
+        labelFont.setWeight( QFont::Bold ); // Needed to calculate the correct pixmap size;
         textWidth = ( QFontMetrics( labelFont ).horizontalAdvance( labelText )
             + qRound( 2 * s_labelOutlineWidth ) );
     } else {
diff --git a/src/lib/marble/PluginManager.cpp b/src/lib/marble/PluginManager.cpp
index 979da5451b..eb24216632 100644
--- a/src/lib/marble/PluginManager.cpp
+++ b/src/lib/marble/PluginManager.cpp
@@ -263,7 +263,7 @@ void PluginManagerPrivate::loadPlugins()
                 foundPlugin = true;
             }
         } else {
-            qWarning() << "Ignoring to load the following file since it doesn't look like a valid Marble plugin:" << path << endl
+            qWarning() << "Ignoring to load the following file since it doesn't look like a valid Marble plugin:" << path << Qt::endl
                        << "Reason:" << loader->errorString();
             delete loader;
         }
diff --git a/src/lib/marble/PopupItem.cpp b/src/lib/marble/PopupItem.cpp
index 1089dc361a..fa409322ef 100644
--- a/src/lib/marble/PopupItem.cpp
+++ b/src/lib/marble/PopupItem.cpp
@@ -278,12 +278,12 @@ bool PopupItem::eventFilter( QObject *object, QEvent *e )
     } else if ( e->type() == QEvent::Wheel ) {
         // Wheel events are forwarded to the underlying widget
         QWheelEvent *event = static_cast<QWheelEvent*> ( e );
-        QPoint shiftedPos = event->pos();
+        QPoint shiftedPos = event->position().toPoint();
         QWidget* child = transform( shiftedPos );
         if ( child ) {
-            QWheelEvent shiftedEvent = QWheelEvent( shiftedPos,
-                                                    event->globalPos(), event->delta(), event->buttons(),
-                                                    event->modifiers() );
+            QWheelEvent shiftedEvent = QWheelEvent( QPointF(shiftedPos),
+                                                    event->globalPosition(), QPoint(), event->angleDelta(), event->buttons(),
+                                                    event->modifiers(), Qt::NoScrollPhase, false );
             if ( QApplication::sendEvent( child, &shiftedEvent ) ) {
                 widget->setCursor( child->cursor() );
                 emit repaintNeeded();
@@ -355,7 +355,7 @@ void PopupItem::printContent() const
     QPrinter printer;
     QPointer<QPrintDialog> dialog = new QPrintDialog(&printer);
     if (dialog->exec() == QPrintDialog::Accepted) {
-        m_ui.webView->page()->print(&printer, [=](bool){});
+        m_ui.webView->print(&printer);
     }
     delete dialog;
 #endif
diff --git a/src/lib/marble/RouteSimulationPositionProviderPlugin.cpp b/src/lib/marble/RouteSimulationPositionProviderPlugin.cpp
index 7801e087cc..e56d8c96cd 100644
--- a/src/lib/marble/RouteSimulationPositionProviderPlugin.cpp
+++ b/src/lib/marble/RouteSimulationPositionProviderPlugin.cpp
@@ -13,6 +13,7 @@
 #include "routing/RoutingModel.h"
 #include "GeoDataAccuracy.h"
 
+#include <QRandomGenerator>
 #include <QIcon>
 
 namespace Marble
@@ -259,15 +260,15 @@ void RouteSimulationPositionProviderPlugin::update()
 
 GeoDataCoordinates RouteSimulationPositionProviderPlugin::addNoise(const Marble::GeoDataCoordinates &position, const Marble::GeoDataAccuracy &accuracy ) const
 {
-    qreal randomBearing = static_cast<qreal>(qrand()) / (static_cast<qreal>(RAND_MAX/M_PI));
-    qreal randomDistance = static_cast<qreal>(qrand()) / (static_cast<qreal>(RAND_MAX/(accuracy.horizontal / 2.0 / m_marbleModel->planetRadius())));
+    qreal randomBearing = static_cast<qreal>(QRandomGenerator::global()->generate()) / (static_cast<qreal>(RAND_MAX/M_PI));
+    qreal randomDistance = static_cast<qreal>(QRandomGenerator::global()->generate()) / (static_cast<qreal>(RAND_MAX/(accuracy.horizontal / 2.0 / m_marbleModel->planetRadius())));
     return position.moveByBearing(randomBearing, randomDistance);
 }
 
 qreal RouteSimulationPositionProviderPlugin::addNoise(qreal bearing)
 {
     qreal const maxBearingError = 30.0;
-    return bearing + static_cast<qreal>(qrand()) / (static_cast<qreal>(RAND_MAX/maxBearingError/2.0)) - maxBearingError / 2.0;
+    return bearing + static_cast<qreal>(QRandomGenerator::global()->generate()) / (static_cast<qreal>(RAND_MAX/maxBearingError/2.0)) - maxBearingError / 2.0;
 }
 
 void RouteSimulationPositionProviderPlugin::changeStatus(PositionProviderStatus status)
diff --git a/src/lib/marble/SearchRunner.h b/src/lib/marble/SearchRunner.h
index 298abbc114..94c9cafb76 100644
--- a/src/lib/marble/SearchRunner.h
+++ b/src/lib/marble/SearchRunner.h
@@ -12,11 +12,12 @@
 #include <QObject>
 #include <QVector>
 
+#include "GeoDataPlacemark.h"
+
 namespace Marble
 {
 
 class GeoDataLatLonBox;
-class GeoDataPlacemark;
 class MarbleModel;
 
 class MARBLE_EXPORT SearchRunner : public QObject
diff --git a/src/lib/marble/SearchWidget.cpp b/src/lib/marble/SearchWidget.cpp
index 7fd168433e..cdd6119fd0 100644
--- a/src/lib/marble/SearchWidget.cpp
+++ b/src/lib/marble/SearchWidget.cpp
@@ -106,7 +106,7 @@ SearchWidget::SearchWidget( QWidget *parent, Qt::WindowFlags flags ) :
     QVBoxLayout* layout = new QVBoxLayout;
     layout->addWidget( d->m_searchField );
     layout->addWidget( d->m_searchResultView );
-    layout->setMargin( 0 );
+    layout->setContentsMargins( 0, 0, 0, 0 );
     setLayout( layout );
 }
 
diff --git a/src/lib/marble/TileLoader.cpp b/src/lib/marble/TileLoader.cpp
index 29a822257e..4f5f3bc6c3 100644
--- a/src/lib/marble/TileLoader.cpp
+++ b/src/lib/marble/TileLoader.cpp
@@ -201,7 +201,7 @@ TileLoader::TileStatus TileLoader::tileStatus( GeoSceneTileDataset const *tileDa
 
 void TileLoader::updateTile( QByteArray const & data, QString const & idStr )
 {
-    QStringList const components = idStr.split(QLatin1Char(':'), QString::SkipEmptyParts);
+    QStringList const components = idStr.split(QLatin1Char(':'), Qt::SkipEmptyParts);
     Q_ASSERT( components.size() == 5 );
 
     QString const origin = components[0];
@@ -223,7 +223,7 @@ void TileLoader::updateTile( QByteArray const & data, QString const & idStr )
 
 void TileLoader::updateTile(const QString &fileName, const QString &idStr)
 {
-    QStringList const components = idStr.split(QLatin1Char(':'), QString::SkipEmptyParts);
+    QStringList const components = idStr.split(QLatin1Char(':'), Qt::SkipEmptyParts);
     Q_ASSERT( components.size() == 5 );
 
     QString const origin = components[0];
diff --git a/src/lib/marble/TourWidget.cpp b/src/lib/marble/TourWidget.cpp
index 093e808e52..c4be0c132e 100644
--- a/src/lib/marble/TourWidget.cpp
+++ b/src/lib/marble/TourWidget.cpp
@@ -193,7 +193,7 @@ TourWidget::TourWidget( QWidget *parent, Qt::WindowFlags flags )
     : QWidget( parent, flags ),
       d( new TourWidgetPrivate( this ) )
 {
-    layout()->setMargin( 0 );
+    layout()->setContentsMargins( 0, 0, 0, 0 );
 
     connect( d->m_tourUi.actionPlay, SIGNAL(triggered()),
             this, SLOT(togglePlaying()) );
diff --git a/src/lib/marble/VisiblePlacemark.cpp b/src/lib/marble/VisiblePlacemark.cpp
index 49f5289adf..213b343088 100644
--- a/src/lib/marble/VisiblePlacemark.cpp
+++ b/src/lib/marble/VisiblePlacemark.cpp
@@ -200,7 +200,7 @@ void VisiblePlacemark::drawLabelPixmap()
 
     int textWidth;
     if ( m_style->labelStyle().glow() ) {
-        labelFont.setWeight( 75 ); // Needed to calculate the correct pixmap size;
+        labelFont.setWeight( QFont::Bold ); // Needed to calculate the correct pixmap size;
         textWidth = ( QFontMetrics( labelFont ).horizontalAdvance( labelName )
             + qRound( 2 * s_labelOutlineWidth ) );
     } else {
@@ -233,7 +233,7 @@ void VisiblePlacemark::drawLabelText(QPainter &labelPainter, const QString &text
         break;
     }
     case Glow: {
-        font.setWeight( 75 );
+        font.setWeight( QFont::Bold );
         fontAscent = QFontMetrics( font ).ascent();
 
         QPen outlinepen( (color.red() + color.green() + color.blue())/3 < 160 ? Qt::white : Qt::black);
diff --git a/src/lib/marble/cloudsync/BookmarkSyncManager.cpp b/src/lib/marble/cloudsync/BookmarkSyncManager.cpp
index f5084ec5d3..4384ee947b 100644
--- a/src/lib/marble/cloudsync/BookmarkSyncManager.cpp
+++ b/src/lib/marble/cloudsync/BookmarkSyncManager.cpp
@@ -648,7 +648,7 @@ GeoDataDocument* BookmarkSyncManager::Private::constructDocument( const QList<Di
 
     for( const DiffItem &item: mergedList ) {
         GeoDataPlacemark *placemark = new GeoDataPlacemark( item.m_placemarkA );
-        QStringList splitten = item.m_path.split(QLatin1Char('/'), QString::SkipEmptyParts);
+        QStringList splitten = item.m_path.split(QLatin1Char('/'), Qt::SkipEmptyParts);
         GeoDataFolder *folder = createFolders( document, splitten );
         folder->append( placemark );
     }
diff --git a/src/lib/marble/declarative/RouteRelationModel.cpp b/src/lib/marble/declarative/RouteRelationModel.cpp
index 64d9b3d00b..ebc8508ea1 100644
--- a/src/lib/marble/declarative/RouteRelationModel.cpp
+++ b/src/lib/marble/declarative/RouteRelationModel.cpp
@@ -101,7 +101,7 @@ QVariant RouteRelationModel::data(const QModelIndex & index, int role) const
         if (iter != m_networks.end()) {
             return *iter;
         }
-        auto const fields = network.split(':', QString::SkipEmptyParts);
+        auto const fields = network.split(':', Qt::SkipEmptyParts);
         for (auto const &field: fields) {
             auto iter = m_networks.find(field);
             if (iter != m_networks.end()) {
@@ -125,7 +125,7 @@ QVariant RouteRelationModel::data(const QModelIndex & index, int role) const
         return ref.isEmpty() ? m_relations.at(index.row())->name() : ref;
     } else if (role == RouteVia) {
         auto const viaValue = m_relations.at(index.row())->osmData().tagValue(QStringLiteral("via"));
-        auto viaList = viaValue.split(';', QString::SkipEmptyParts);
+        auto viaList = viaValue.split(';', Qt::SkipEmptyParts);
         for (auto &via: viaList) {
             via = via.trimmed();
         }
diff --git a/src/lib/marble/geodata/handlers/kml/KmlCoordinatesTagHandler.cpp b/src/lib/marble/geodata/handlers/kml/KmlCoordinatesTagHandler.cpp
index fed783074d..74e61cc0b8 100644
--- a/src/lib/marble/geodata/handlers/kml/KmlCoordinatesTagHandler.cpp
+++ b/src/lib/marble/geodata/handlers/kml/KmlCoordinatesTagHandler.cpp
@@ -48,7 +48,7 @@ GeoNode* KmlcoordinatesTagHandler::parse( GeoParser& parser ) const
      || parentItem.represents( kmlTag_MultiGeometry )
      || parentItem.represents( kmlTag_LinearRing )
      || parentItem.represents( kmlTag_LatLonQuad ) ) {
-        QStringList  coordinatesLines;// = parser.readElementText().trimmed().split( QRegExp("\\s"), QString::SkipEmptyParts );
+        QStringList  coordinatesLines;// = parser.readElementText().trimmed().split( QRegExp("\\s"), Qt::SkipEmptyParts );
         // Splitting using the "\\s" regexp is slow, split manually instead.
         QString text = parser.readElementText().trimmed();
 
diff --git a/src/lib/marble/routing/RoutingInputWidget.cpp b/src/lib/marble/routing/RoutingInputWidget.cpp
index 509a66cc90..1deec886c9 100644
--- a/src/lib/marble/routing/RoutingInputWidget.cpp
+++ b/src/lib/marble/routing/RoutingInputWidget.cpp
@@ -257,7 +257,7 @@ RoutingInputWidget::RoutingInputWidget( MarbleModel* model, int index, QWidget *
     QHBoxLayout *layout = new QHBoxLayout( this );
     layout->setSizeConstraint( QLayout::SetMinimumSize );
     layout->setSpacing( 0 );
-    layout->setMargin( 0 );
+    layout->setContentsMargins( 0, 0, 0, 0 );
     layout->addWidget( d->m_lineEdit );
     layout->addWidget( d->m_removeButton );
 
diff --git a/src/lib/marble/routing/RoutingModel.cpp b/src/lib/marble/routing/RoutingModel.cpp
index 614d710861..e24b06a1fb 100644
--- a/src/lib/marble/routing/RoutingModel.cpp
+++ b/src/lib/marble/routing/RoutingModel.cpp
@@ -14,6 +14,7 @@
 #include "GeoDataAccuracy.h"
 
 #include <QPixmap>
+#include <QIODevice>
 
 namespace Marble
 {
diff --git a/src/lib/marble/routing/RoutingWidget.cpp b/src/lib/marble/routing/RoutingWidget.cpp
index cf82faa45b..e23f11debc 100644
--- a/src/lib/marble/routing/RoutingWidget.cpp
+++ b/src/lib/marble/routing/RoutingWidget.cpp
@@ -324,7 +324,7 @@ RoutingWidget::RoutingWidget( MarbleWidget *marbleWidget, QWidget *parent ) :
     d->setupToolBar();
     d->m_ui.routeComboBox->setVisible( false );
     d->m_ui.routeComboBox->setModel( d->m_routingManager->alternativeRoutesModel() );
-    layout()->setMargin( 0 );
+    layout()->setContentsMargins( 0, 0, 0, 0 );
 
     d->m_ui.routingProfileComboBox->setModel( d->m_routingManager->profilesModel() );
 
@@ -895,7 +895,7 @@ void RoutingWidget::initializeTour()
     double totalDistance = 0.0;
     for( int i=0; i<route.size(); ++i ){
         // TODO: QString( i )?
-        waypoints << WaypointInfo(i, totalDistance, route.at(i).path().first(), route.at(i).maneuver(), QLatin1String("start ") + QString(i));
+        waypoints << WaypointInfo(i, totalDistance, route.at(i).path().first(), route.at(i).maneuver(), QLatin1String("start ") + QString::number(i));
         totalDistance += route.at( i ).distance();
     }
 
diff --git a/src/lib/marble/routing/instructions/RoutingInstruction.cpp b/src/lib/marble/routing/instructions/RoutingInstruction.cpp
index e21894e0d8..3c15ade8b7 100644
--- a/src/lib/marble/routing/instructions/RoutingInstruction.cpp
+++ b/src/lib/marble/routing/instructions/RoutingInstruction.cpp
@@ -8,6 +8,7 @@
 #include <QCoreApplication>
 #include <QStringList>
 #include <QTextStream>
+#include <QLocale>
 
 #include <cmath>
 
diff --git a/src/plugins/render/elevationprofilefloatitem/ElevationProfileDataSource.cpp b/src/plugins/render/elevationprofilefloatitem/ElevationProfileDataSource.cpp
index 61d4e0eb8d..750e5de8b3 100644
--- a/src/plugins/render/elevationprofilefloatitem/ElevationProfileDataSource.cpp
+++ b/src/plugins/render/elevationprofilefloatitem/ElevationProfileDataSource.cpp
@@ -151,7 +151,7 @@ void ElevationProfileTrackDataSource::handleObjectAdded(GeoDataObject *object)
     QHashIterator<QString, QList<const GeoDataTrack *> > i(m_trackHash);
     while (i.hasNext()) {
         i.next();
-        mDebug() << i.key() << ": " << i.value() << endl;
+        mDebug() << i.key() << ": " << i.value() << Qt::endl;
         QFileInfo info(i.key());
         QString filename = info.fileName();
         QList<const GeoDataTrack *> list = i.value();
diff --git a/src/plugins/render/photo/PhotoPlugin.cpp b/src/plugins/render/photo/PhotoPlugin.cpp
index ff7625c740..a0983ca27c 100644
--- a/src/plugins/render/photo/PhotoPlugin.cpp
+++ b/src/plugins/render/photo/PhotoPlugin.cpp
@@ -192,7 +192,7 @@ void PhotoPlugin::setSettings( const QHash<QString,QVariant> &settings )
     AbstractDataPlugin::setSettings( settings );
 
     setNumberOfItems(qMin<int>(maximumNumberOfItems, settings.value(QStringLiteral("numberOfItems"), 15).toInt()));
-    m_checkStateList = settings.value(QStringLiteral("checkState"), QStringLiteral("1,2,3,4,5,6,7")).toString().split(QLatin1Char(','), QString::SkipEmptyParts);
+    m_checkStateList = settings.value(QStringLiteral("checkState"), QStringLiteral("1,2,3,4,5,6,7")).toString().split(QLatin1Char(','), Qt::SkipEmptyParts);
 
     updateSettings();
     readSettings();
diff --git a/src/plugins/render/weather/WeatherItem.cpp b/src/plugins/render/weather/WeatherItem.cpp
index ae18d11b5f..ceee07c320 100644
--- a/src/plugins/render/weather/WeatherItem.cpp
+++ b/src/plugins/render/weather/WeatherItem.cpp
@@ -208,7 +208,7 @@ class WeatherItemPrivate
     void updateFavorite()
     {
         QStringList items = m_settings.value(QStringLiteral("favoriteItems")).toString()
-                                        .split(QLatin1Char(','), QString::SkipEmptyParts);
+                                        .split(QLatin1Char(','), Qt::SkipEmptyParts);
         bool favorite = items.contains( m_parent->id() );
 
         m_favoriteButton.setVisible( favorite );
diff --git a/src/plugins/render/weather/WeatherPlugin.cpp b/src/plugins/render/weather/WeatherPlugin.cpp
index 2406ad510a..c424268b24 100644
--- a/src/plugins/render/weather/WeatherPlugin.cpp
+++ b/src/plugins/render/weather/WeatherPlugin.cpp
@@ -288,7 +288,7 @@ void WeatherPlugin::updateSettings()
     if ( model() ) {
         bool favoritesOnly = m_settings.value(QStringLiteral("onlyFavorites"), false).toBool();
         QList<QString> favoriteItems = m_settings.value(QStringLiteral("favoriteItems")).toString()
-                .split(QLatin1Char(','), QString::SkipEmptyParts);
+                .split(QLatin1Char(','), Qt::SkipEmptyParts);
 
         model()->setFavoriteItems( favoriteItems );
         setNumberOfItems( favoritesOnly ? favoriteItems.size() : numberOfStationsPerFetch );
diff --git a/src/plugins/runner/gpx/tests/TestTrack.cpp b/src/plugins/runner/gpx/tests/TestTrack.cpp
index 506b83c483..5f2c22bf6d 100644
--- a/src/plugins/runner/gpx/tests/TestTrack.cpp
+++ b/src/plugins/runner/gpx/tests/TestTrack.cpp
@@ -77,7 +77,7 @@ void TestTrack::simpleParseTest()
     QByteArray array( content.toUtf8() );
     QBuffer buffer( &array );
     buffer.open( QIODevice::ReadOnly );
-    qDebug() << "Buffer content:" << endl << buffer.buffer();
+    qDebug() << "Buffer content:" << Qt::endl << buffer.buffer();
     if ( !parser.read( &buffer ) ) {
         QFAIL( "Could not parse data!" );
         return;
@@ -154,7 +154,7 @@ void TestTrack::withoutTimeTest()
     QByteArray array( content.toUtf8() );
     QBuffer buffer( &array );
     buffer.open( QIODevice::ReadOnly );
-    qDebug() << "Buffer content:" << endl << buffer.buffer();
+    qDebug() << "Buffer content:" << Qt::endl << buffer.buffer();
     if ( !parser.read( &buffer ) ) {
         QFAIL( "Could not parse data!" );
         return;
@@ -225,7 +225,7 @@ void TestTrack::partialTimeTest()
     QByteArray array( content.toUtf8() );
     QBuffer buffer( &array );
     buffer.open( QIODevice::ReadOnly );
-    qDebug() << "Buffer content:" << endl << buffer.buffer();
+    qDebug() << "Buffer content:" << Qt::endl << buffer.buffer();
     if ( !parser.read( &buffer ) ) {
         QFAIL( "Could not parse data!" );
         return;
@@ -351,7 +351,7 @@ void TestTrack::extendedDataHeartRateTest()
     QByteArray array( content.toUtf8() );
     QBuffer buffer( &array );
     buffer.open( QIODevice::ReadOnly );
-    qDebug() << "Buffer content:" << endl << buffer.buffer();
+    qDebug() << "Buffer content:" << Qt::endl << buffer.buffer();
     if ( !parser.read( &buffer ) ) {
         QFAIL( "Could not parse data!" );
         return;
diff --git a/src/plugins/runner/local-osm-search/DatabaseQuery.cpp b/src/plugins/runner/local-osm-search/DatabaseQuery.cpp
index ace08ee83a..890f2bda1f 100644
--- a/src/plugins/runner/local-osm-search/DatabaseQuery.cpp
+++ b/src/plugins/runner/local-osm-search/DatabaseQuery.cpp
@@ -29,7 +29,7 @@ DatabaseQuery::DatabaseQuery( const MarbleModel* model, const QString &searchTer
         m_resultFormat = AddressFormat;
     }
 
-    QStringList terms = m_searchTerm.split(QLatin1Char(','), QString::SkipEmptyParts );
+    QStringList terms = m_searchTerm.split(QLatin1Char(','), Qt::SkipEmptyParts );
 
     QRegExp streetAndHouse( "^(.*)\\s+(\\d+\\D?)$" );
     if ( streetAndHouse.indexIn( terms.first() ) != -1 ) {
-- 
GitLab

