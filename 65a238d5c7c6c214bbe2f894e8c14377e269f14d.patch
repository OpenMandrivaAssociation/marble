From 65a238d5c7c6c214bbe2f894e8c14377e269f14d Mon Sep 17 00:00:00 2001
From: Gilles Caulier <caulier.gilles@gmail.com>
Date: Tue, 19 Sep 2023 06:31:01 +0200
Subject: [PATCH] port all tools to Qt6

---
 PORT.QT6                                             | 5 +++--
 bootstrap-marble.sh                                  | 2 +-
 src/apps/CMakeLists.txt                              | 2 +-
 tools/asc2kml/asc2kml.cpp                            | 4 ----
 tools/dateline/dateline.cpp                          | 1 -
 tools/iau2kml/iau2kml.cpp                            | 2 --
 tools/mapreproject/NwwMapImage.cpp                   | 2 +-
 tools/mapreproject/OsmTileClusterRenderer.cpp        | 3 ++-
 tools/maptheme-previewimage/main.cpp                 | 2 +-
 tools/osm-addresses/OsmParser.cpp                    | 3 ++-
 tools/osm-sisyphus/jobmanager.cpp                    | 2 +-
 tools/pnt2svg/pnt2svg.cpp                            | 8 ++++----
 tools/pntreplace/CMakeLists.txt                      | 2 +-
 tools/poly2kml/main.cpp                              | 7 ++++---
 tools/routing-instructions/main.cpp                  | 3 +--
 tools/svg2pnt/CMakeLists.txt                         | 2 +-
 tools/vectorosm-tilecreator/TileDirectory.cpp        | 4 ++--
 tools/vectorosm-tilecreator/WayConcatenator.cpp      | 5 +++--
 tools/vectorosm-tilecreator/vectorosm-cachetiles.cpp | 3 ++-
 19 files changed, 30 insertions(+), 32 deletions(-)

diff --git a/PORT.QT6 b/PORT.QT6
index 99ddace26c..951e50422d 100644
--- a/PORT.QT6
+++ b/PORT.QT6
@@ -1,10 +1,11 @@
 GOAL: compile and run digiKam geolocation features with Qt6
+Port to Qt6 done by Gilles Caulier on September 2023
+Envirronement: Kubuntu 23.04 + Qt 6.4.2 + KF6 from master.
 
 Only pure Qt codes are ported.
 Qt5 support is dropped.
 Qt6Core5Compat still used.
 "PORT_QT6" annotation is used in source code when port to Qt6 needs to be double checked.
-Only shared libraries are ported, not target applications.
 KDE API based codes are disabled.
 Test codes not ported.
 Example codes not ported.
@@ -140,4 +141,4 @@ DIRECTORIES                                         STATUS
 │   │   └── templates                               - Originally commented in CMakeLists.txt
 │   └── thumbnailer                                 DISABLED: KDE BASED
 ├── tests                                           -
-└── tools                                           -
+└── tools                                           DONE
diff --git a/bootstrap-marble.sh b/bootstrap-marble.sh
index 60721e6699..33d1a4ea03 100755
--- a/bootstrap-marble.sh
+++ b/bootstrap-marble.sh
@@ -21,7 +21,7 @@ cmake -G "$MAKEFILES_TYPE" \
       -DCMAKE_INSTALL_PREFIX=/usr \
       -DWITH_DESIGNER_PLUGIN=ON \
       -DBUILD_MARBLE_TESTS=OFF \
-      -DBUILD_MARBLE_TOOLS=OFF \
+      -DBUILD_MARBLE_TOOLS=ON \
       -DBUILD_MARBLE_EXAMPLES=OFF \
       -DBUILD_MARBLE_APPS=ON \
       -DBUILD_WITH_DBUS=ON \
diff --git a/src/apps/CMakeLists.txt b/src/apps/CMakeLists.txt
index 12937a1a2f..2aecfeccc5 100644
--- a/src/apps/CMakeLists.txt
+++ b/src/apps/CMakeLists.txt
@@ -3,7 +3,7 @@ if(BUILD_MARBLE_APPS)
     if (NOT ANDROID)
         add_subdirectory(marble-ui)
         add_subdirectory(marble-qt)
-        add_subdirectory(marble-kde)
+#        add_subdirectory(marble-kde)
     endif()
 
     add_subdirectory(behaim)
diff --git a/tools/asc2kml/asc2kml.cpp b/tools/asc2kml/asc2kml.cpp
index bbfc9140cc..b95e62762e 100644
--- a/tools/asc2kml/asc2kml.cpp
+++ b/tools/asc2kml/asc2kml.cpp
@@ -48,25 +48,21 @@ int main(int argc, char *argv[])
 
         // Read the data serialized from the file.
         QTextStream  sourcestream( &sourcefile );
-        sourcestream.setCodec("UTF-8");
 
         QFile  targetfile( targetfilename );
         targetfile.open( QIODevice::WriteOnly );
 
         QTextStream  targetstream( &targetfile );
-        targetstream.setCodec("UTF-8");
 
         QFile  supportfile( supportfilename );
         supportfile.open( QIODevice::ReadOnly );
 
         QTextStream  supportstream( &supportfile );
-        supportstream.setCodec("UTF-8");
 
         QFile  timezonefile( timezonefilename );
         timezonefile.open( QIODevice::ReadOnly );
 
         QTextStream  timezonestream( &timezonefile );
-        timezonestream.setCodec("UTF-8");
 
         // gzFile gzDoc = gzopen( targetfilename.toLatin1(), "w");
         // QTextStream targetstream( new QString() );
diff --git a/tools/dateline/dateline.cpp b/tools/dateline/dateline.cpp
index bb14575004..6e9966a369 100644
--- a/tools/dateline/dateline.cpp
+++ b/tools/dateline/dateline.cpp
@@ -75,7 +75,6 @@ int main(int argc, char *argv[])
 
     // Read the data serialized from the file.
     QTextStream  sourcestream( &sourcefile );
-    sourcestream.setCodec("UTF-8");
 
     QString  rawline;
     QString  lonstring;
diff --git a/tools/iau2kml/iau2kml.cpp b/tools/iau2kml/iau2kml.cpp
index 788cd1af5d..ce6f1a3f4f 100644
--- a/tools/iau2kml/iau2kml.cpp
+++ b/tools/iau2kml/iau2kml.cpp
@@ -48,13 +48,11 @@ int main(int argc, char *argv[])
 
         // Read the data serialized from the file.
         QTextStream  sourcestream( &sourcefile );
-        sourcestream.setCodec("UTF-8");
 
         QFile  targetfile( targetfilename );
         targetfile.open( QIODevice::ReadWrite );
 
         QTextStream  targetstream( &targetfile );
-        targetstream.setCodec("UTF-8");
 
         // gzFile gzDoc = gzopen( targetfilename.toLatin1(), "w");
         // QTextStream targetstream( new QString() );
diff --git a/tools/mapreproject/NwwMapImage.cpp b/tools/mapreproject/NwwMapImage.cpp
index 32af040eba..9717183864 100644
--- a/tools/mapreproject/NwwMapImage.cpp
+++ b/tools/mapreproject/NwwMapImage.cpp
@@ -101,7 +101,7 @@ QPair<QImage, bool> NwwMapImage::tile( int const tileX, int const tileY )
         m_tileMissing.insert( tileKey );
         //qDebug() << "Tile" << filename << "not found";
     } else {
-        m_tileCache.insert( tileKey, new QImage( tile ), tile.byteCount() );
+        m_tileCache.insert( tileKey, new QImage( tile ), tile.sizeInBytes() );
         //qDebug() << "Tile" << filename << "loaded and inserted in cache";
     }
     return QPair<QImage, bool>( tile, loaded );
diff --git a/tools/mapreproject/OsmTileClusterRenderer.cpp b/tools/mapreproject/OsmTileClusterRenderer.cpp
index dbb3dc024e..bbbb80c4f0 100644
--- a/tools/mapreproject/OsmTileClusterRenderer.cpp
+++ b/tools/mapreproject/OsmTileClusterRenderer.cpp
@@ -4,6 +4,7 @@
 
 #include <QDebug>
 #include <QTime>
+#include <QElapsedTimer>
 
 #include <cmath>
 
@@ -78,7 +79,7 @@ void OsmTileClusterRenderer::renderOsmTileCluster( int const clusterX, int const
 {
     qDebug() << objectName() << "rendering clusterX:" << clusterX << ", clusterY:" << clusterY;
     int tilesRenderedCount = 0;
-    QTime t;
+    QElapsedTimer t;
     t.start();
     int const tileX1 = clusterX * m_clusterEdgeLengthTiles;
     int const tileX2 = tileX1 + m_clusterEdgeLengthTiles;
diff --git a/tools/maptheme-previewimage/main.cpp b/tools/maptheme-previewimage/main.cpp
index 72e4948924..21d27892c2 100644
--- a/tools/maptheme-previewimage/main.cpp
+++ b/tools/maptheme-previewimage/main.cpp
@@ -73,7 +73,7 @@ int main(int argc, char** argv)
         Cheeeeze::msleep( 25 );
         app.processEvents();
     }
-    QPixmap const globe = QPixmap::grabWidget( mapWidget );
+    QPixmap const globe = mapWidget->grab();
     globePainter.drawPixmap( QPoint( 2, 2 ), resize( globe ) );
     globePainter.end();
     canvas.save( argc > 2 ? argv[2] : "preview.png" );
diff --git a/tools/osm-addresses/OsmParser.cpp b/tools/osm-addresses/OsmParser.cpp
index ce3cb5312c..3c8144eb3a 100644
--- a/tools/osm-addresses/OsmParser.cpp
+++ b/tools/osm-addresses/OsmParser.cpp
@@ -23,6 +23,7 @@
 
 #include <QDebug>
 #include <QTime>
+#include <QRandomGenerator>
 
 namespace Marble
 {
@@ -692,7 +693,7 @@ QColor OsmParser::randomColor() const
     QVector<QColor> colors = QVector<QColor>() << aluminumGray4 << brickRed4;
     colors << woodBrown4 << forestGreen4 << hotOrange4;
     colors << seaBlue2 << skyBlue4 << sunYellow6;
-    return colors.at( qrand() % colors.size() );
+    return colors.at( QRandomGenerator::global()->generate() % colors.size() );
 }
 
 void OsmParser::writeKml( const QString &area, const QString &version, const QString &date, const QString &transport, const QString &payload, const QString &filename ) const
diff --git a/tools/osm-sisyphus/jobmanager.cpp b/tools/osm-sisyphus/jobmanager.cpp
index 6b1a0285ba..126f269b4e 100644
--- a/tools/osm-sisyphus/jobmanager.cpp
+++ b/tools/osm-sisyphus/jobmanager.cpp
@@ -69,7 +69,7 @@ void JobManager::setRegionsFile(const QString &filename)
             region.setPbfFile(node.namedItem("pbf").toElement().text());
         }
         if (!node.namedItem("transport").isNull()) {
-            QStringList input = node.namedItem("transport").toElement().text().split(QLatin1Char(','), QString::SkipEmptyParts);
+            QStringList input = node.namedItem("transport").toElement().text().split(QLatin1Char(','), Qt::SkipEmptyParts);
             for( const QString &value: input ) {
                 if (!region.continent().isEmpty() && !region.name().isEmpty()) {
                     PendingJob job;
diff --git a/tools/pnt2svg/pnt2svg.cpp b/tools/pnt2svg/pnt2svg.cpp
index 235afa54cd..eae3a7bf8b 100644
--- a/tools/pnt2svg/pnt2svg.cpp
+++ b/tools/pnt2svg/pnt2svg.cpp
@@ -136,11 +136,11 @@ int main(int argc, char *argv[])
     if (data.open(QFile::WriteOnly | QFile::Truncate)) {
         QTextStream out(&data);
 
-        out << "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>" << endl;
-        out << "<svg width=\"432.00000px\" height=\"216.00000px\">" << endl;
+        out << "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>" << Qt::endl;
+        out << "<svg width=\"432.00000px\" height=\"216.00000px\">" << Qt::endl;
         for ( const QString & path: pathList)
-            out << path << endl;
-        out << "</svg>" << endl;
+            out << path << Qt::endl;
+        out << "</svg>" << Qt::endl;
         qDebug() << "Done!";
         data.close();
     }
diff --git a/tools/pntreplace/CMakeLists.txt b/tools/pntreplace/CMakeLists.txt
index b4eed0716d..6819a2ae16 100644
--- a/tools/pntreplace/CMakeLists.txt
+++ b/tools/pntreplace/CMakeLists.txt
@@ -9,4 +9,4 @@ include_directories(
 set( ${TARGET}_SRC pntreplace.cpp svgxmlhandler.cpp )
 add_executable( ${TARGET} ${${TARGET}_SRC} )
 
-target_link_libraries( ${TARGET} Qt6::Xml Qt6::Widgets )
+target_link_libraries( ${TARGET} Qt6::Xml Qt6::Widgets Qt6::Core5Compat )
diff --git a/tools/poly2kml/main.cpp b/tools/poly2kml/main.cpp
index 99df54348e..ca3c426a3e 100644
--- a/tools/poly2kml/main.cpp
+++ b/tools/poly2kml/main.cpp
@@ -9,6 +9,7 @@
 #include <QTextStream>
 #include <QTime>
 #include <QDebug>
+#include <QRandomGenerator>
 
 #include "geodata/data/GeoDataLineString.h"
 #include "geodata/data/GeoDataLinearRing.h"
@@ -42,7 +43,7 @@ QColor randomColor()
     QVector<QColor> colors = QVector<QColor>() << Oxygen::aluminumGray4 << Oxygen::brickRed4;
     colors << Oxygen::hotOrange4 << Oxygen::forestGreen4 << Oxygen::hotOrange4;
     colors << Oxygen::seaBlue2 << Oxygen::skyBlue4 << Oxygen::sunYellow6;
-    return colors.at( qrand() % colors.size() );
+    return colors.at( QRandomGenerator::global()->generate() % colors.size() );
 }
 
 void parseBoundingBox( const QFileInfo &file, const QString &name,
@@ -62,7 +63,7 @@ void parseBoundingBox( const QFileInfo &file, const QString &name,
         while ( !stream.atEnd() ) {
             bool inside = true;
             QString line = stream.readLine().trimmed();
-            QStringList entries = line.split( QLatin1Char( ' ' ), QString::SkipEmptyParts );
+            QStringList entries = line.split( QLatin1Char( ' ' ), Qt::SkipEmptyParts );
             if ( entries.size() == 1 ) {
                 if (entries.first() == QLatin1String("END") && inside) {
                     inside = false;
@@ -176,7 +177,7 @@ int main( int argc, char* argv[] )
         }
     }
 
-    qsrand( QTime::currentTime().msec() );
+    QRandomGenerator::global()->seed( QTime::currentTime().msec());
     QFileInfo input( inputFile );
     if ( !input.exists() || !input.isFile() ) {
         qDebug() << "Invalid input file";
diff --git a/tools/routing-instructions/main.cpp b/tools/routing-instructions/main.cpp
index eb1ccd90d9..f4a45806b2 100644
--- a/tools/routing-instructions/main.cpp
+++ b/tools/routing-instructions/main.cpp
@@ -130,7 +130,6 @@ int main( int argc, char* argv[] )
     else
     {
         QTextStream console( stdin );
-        console.setCodec( "UTF-8" );
         console.setAutoDetectUnicode( true );
         QString content = adjustGosmoreVersion( console, parser );
         QTextStream stream( &content );
@@ -138,7 +137,7 @@ int main( int argc, char* argv[] )
     }
 
     QTextStream console( stdout );
-    console.setCodec( "UTF-8" );
+
     if ( arguments.contains( "--dense" ) )
     {
         console << "Content-Type: text/plain\n\n";
diff --git a/tools/svg2pnt/CMakeLists.txt b/tools/svg2pnt/CMakeLists.txt
index 3281fac22e..81d5a2bb19 100644
--- a/tools/svg2pnt/CMakeLists.txt
+++ b/tools/svg2pnt/CMakeLists.txt
@@ -9,4 +9,4 @@ include_directories(
 set( ${TARGET}_SRC svg2pnt.cpp svgxmlhandler.cpp )
 add_executable( ${TARGET} ${${TARGET}_SRC} )
 
-target_link_libraries( ${TARGET}  Qt6::Core Qt6::Xml )
+target_link_libraries( ${TARGET}  Qt6::Core Qt6::Xml Qt6::Core5Compat)
diff --git a/tools/vectorosm-tilecreator/TileDirectory.cpp b/tools/vectorosm-tilecreator/TileDirectory.cpp
index 5c05f93f75..9f00b555ed 100644
--- a/tools/vectorosm-tilecreator/TileDirectory.cpp
+++ b/tools/vectorosm-tilecreator/TileDirectory.cpp
@@ -135,7 +135,7 @@ void TileDirectory::setInputFile(const QString &filename)
             m_boundingBox = boundingBox(m_inputFile);
         } else {
             // remote file: check if already downloaded
-            QFileInfo cacheFile = QString("%1/%2").arg(m_cacheDir).arg(url.fileName());
+            QFileInfo cacheFile = QFileInfo(QString("%1/%2").arg(m_cacheDir).arg(url.fileName()));
             if (!cacheFile.exists()) {
                 download(filename, cacheFile.absoluteFilePath());
             }
@@ -275,7 +275,7 @@ void TileDirectory::setBoundingPolygon(const QString &file)
         while ( !stream.atEnd() ) {
             bool inside = true;
             QString line = stream.readLine().trimmed();
-            QStringList entries = line.split( QLatin1Char( ' ' ), QString::SkipEmptyParts );
+            QStringList entries = line.split( QLatin1Char( ' ' ), Qt::SkipEmptyParts );
             if ( entries.size() == 1 ) {
                 if (entries.first() == QLatin1String("END") && inside) {
                     inside = false;
diff --git a/tools/vectorosm-tilecreator/WayConcatenator.cpp b/tools/vectorosm-tilecreator/WayConcatenator.cpp
index cf972b84ed..b6fc921c49 100644
--- a/tools/vectorosm-tilecreator/WayConcatenator.cpp
+++ b/tools/vectorosm-tilecreator/WayConcatenator.cpp
@@ -143,8 +143,9 @@ void WayConcatenator::createWayChunk(const PlacemarkPtr &placemark, qint64 first
 
 WayChunk::Ptr WayConcatenator::wayChunk(const GeoDataPlacemark &placemark, qint64 matchId) const
 {
-    QHash<qint64, WayChunk::Ptr>::ConstIterator matchItr = m_hash.find(matchId);
-    while (matchItr != m_hash.end() && matchItr.key() == matchId) {
+    QMultiHash<qint64, WayChunk::Ptr>::const_iterator matchItr = m_hash.find(matchId);
+
+    while (matchItr != m_hash.constEnd() && matchItr.key() == matchId) {
         auto const & chunk = matchItr.value();
         if (chunk->concatPossible(placemark)) {
             return chunk;
