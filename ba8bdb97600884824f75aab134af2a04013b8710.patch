From ba8bdb97600884824f75aab134af2a04013b8710 Mon Sep 17 00:00:00 2001
From: Gilles Caulier <caulier.gilles@gmail.com>
Date: Mon, 18 Sep 2023 09:30:34 +0200
Subject: [PATCH] qt6++

---
 src/lib/marble/BookmarkManagerDialog.cpp |  2 +-
 src/lib/marble/MapWizard.cpp             | 14 +++++++-------
 src/lib/marble/OwsServiceManager.cpp     |  2 +-
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/lib/marble/BookmarkManagerDialog.cpp b/src/lib/marble/BookmarkManagerDialog.cpp
index f1d105871f..265de6779a 100644
--- a/src/lib/marble/BookmarkManagerDialog.cpp
+++ b/src/lib/marble/BookmarkManagerDialog.cpp
@@ -334,7 +334,7 @@ void BookmarkManagerDialogPrivate::initializeFoldersView( GeoDataTreeModel* tree
 {
     m_folderFilterModel.setFilterKeyColumn( 1 );
     const QString regexp = QLatin1String(GeoDataTypes::GeoDataFolderType) + QLatin1Char('|') + QLatin1String(GeoDataTypes::GeoDataDocumentType);
-    m_folderFilterModel.setFilterRegExp( regexp );
+    m_folderFilterModel.setFilterRegularExpression( regexp );
     m_folderFilterModel.setSourceModel( treeModel );
 
     m_parent->foldersTreeView->setModel( &m_folderFilterModel );
diff --git a/src/lib/marble/MapWizard.cpp b/src/lib/marble/MapWizard.cpp
index 3c3c577ad0..3e3283cc24 100644
--- a/src/lib/marble/MapWizard.cpp
+++ b/src/lib/marble/MapWizard.cpp
@@ -432,7 +432,7 @@ void MapWizard::processSelectedLayerInformation()
     // Remove all invalid characters from the theme-String
     // that will make the TileLoader malfunction.
     QString themeString = d->selectedLayers.first();
-    themeString.remove(QRegExp("[:\"\\\\/]"));
+    themeString.remove(QRegularExpression("[:\"\\\\/]"));
     d->uiWidget.lineEditTheme->setText( themeString );
     QRegularExpression rx("^[^:\"\\\\/]*$");
     QValidator *validator = new QRegularExpressionValidator(rx, this);
@@ -477,17 +477,17 @@ void MapWizard::processImageResults()
         QMessageBox::information( this,
                                     tr( "%1" ).arg(imageType),
                                     tr( "The %1 could not be downloaded." ).arg(imageType) );
-        if (imageType == PreviewImage) d->m_previewImageValid = false;
-        if (imageType == LevelZeroTile) d->m_levelZeroTileValid = false;
-        if (imageType == LegendImage) d->m_legendImageValid = false;
+        if (imageType == QChar(PreviewImage)) d->m_previewImageValid = false;                   // PORT_QT6 : comparison between enum and QString???
+        if (imageType == QChar(LevelZeroTile)) d->m_levelZeroTileValid = false;
+        if (imageType == QChar(LegendImage)) d->m_legendImageValid = false;
     }
     else if  (d->owsManager.imageRequestResult().imageStatus() == WmsImageFailedServerMessage ) {
         QMessageBox::information( this,
                                     tr( "%1" ).arg(imageType),
                                     tr( "The %1 could not be downloaded successfully. The server replied:\n\n%2" ).arg( imageType, QString( d->owsManager.resultRaw() ) ) );
-        if (imageType == PreviewImage) d->m_previewImageValid = false;
-        if (imageType == LevelZeroTile) d->m_levelZeroTileValid = false;
-        if (imageType == LegendImage) d->m_legendImageValid = false;
+        if (imageType == QChar(PreviewImage)) d->m_previewImageValid = false;
+        if (imageType == QChar(LevelZeroTile)) d->m_levelZeroTileValid = false;
+        if (imageType == QChar(LegendImage)) d->m_legendImageValid = false;
     }
     else {
         if (d->owsManager.imageRequestResult().resultType() == PreviewImage) {
diff --git a/src/lib/marble/OwsServiceManager.cpp b/src/lib/marble/OwsServiceManager.cpp
index f800d0c6bf..82e940d52b 100644
--- a/src/lib/marble/OwsServiceManager.cpp
+++ b/src/lib/marble/OwsServiceManager.cpp
@@ -317,7 +317,7 @@ void OwsServiceManager::queryOwsCapabilities(const QUrl& queryUrl, const QString
 
     QNetworkRequest request;
     request.setUrl( url );
-    request.setAttribute(QNetworkRequest::FollowRedirectsAttribute, true);
+    request.setAttribute(QNetworkRequest::RedirectPolicyAttribute, QNetworkRequest::NoLessSafeRedirectPolicy);
 
     mDebug() << "for url" << url;
     m_capabilitiesAccessManager.get( request );
-- 
GitLab

