From c86acad932bfde97939a478cf91c792517e4ef72 Mon Sep 17 00:00:00 2001
From: Gilles Caulier <caulier.gilles@gmail.com>
Date: Sun, 17 Sep 2023 09:18:06 +0200
Subject: [PATCH] qt6++

---
 CMakeLists.txt                              | 26 ++++++++++-----------
 src/lib/marble/CMakeLists.txt               |  2 +-
 src/lib/marble/declarative/CMakeLists.txt   |  8 +++----
 src/lib/marble/declarative/Placemark.cpp    |  6 ++---
 src/plugins/positionprovider/CMakeLists.txt |  4 ++--
 5 files changed, 23 insertions(+), 23 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index b779501047..82084e4aa4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -81,7 +81,7 @@ include( MarbleMacros )
 ####################################################
 # Generate the tiles with the tilecreator at compile time
 # if this option is set, srtm.jpg will not be installed but the generated tiles instead
-option(MOBILE "Create a Marble version optimized for handheld devices")
+option(MOBILE "Create a Marble version optimized for handheld devices" OFF)
 
 ####################################################
 # Provide opt-in switch for mobile variant, which is not only useful for Android.
@@ -116,10 +116,10 @@ if(ANDROID)
    # TODO: still needed with ECM toolchain?
    SET(QT_QMAKE_EXECUTABLE "$ENV{Qt5_android}/bin/qmake")
 else()
-    set(REQUIRED_QT_VERSION 5.14.0)
+    set(REQUIRED_QT_VERSION 6.4.2)
 endif()
 
-find_package(Qt5 ${REQUIRED_QT_VERSION} REQUIRED
+find_package(Qt6 ${REQUIRED_QT_VERSION} REQUIRED
     COMPONENTS
         Core
         Xml
@@ -131,6 +131,7 @@ find_package(Qt5 ${REQUIRED_QT_VERSION} REQUIRED
         Concurrent
         Quick
         PrintSupport
+        Core5Compat
 )
 
 if(ANDROID)
@@ -139,18 +140,17 @@ if(ANDROID)
 
    set ( MARBLE_NO_WEBKITWIDGETS TRUE )
 else()
-    find_package(Qt5WebChannel ${REQUIRED_QT_VERSION})
-    find_package(Qt5WebEngine ${REQUIRED_QT_VERSION})
-    find_package(Qt5WebEngineWidgets ${REQUIRED_QT_VERSION})
+    find_package(Qt6WebChannel ${REQUIRED_QT_VERSION})
+    find_package(Qt6WebEngineWidgets ${REQUIRED_QT_VERSION})
 
-   if ( NOT Qt5WebEngineWidgets_FOUND )
+   if ( NOT Qt6WebEngineWidgets_FOUND )
      set ( MARBLE_NO_WEBKITWIDGETS TRUE )
    endif()
 endif()
 
 if (BUILD_WITH_DBUS)
-  find_package(Qt5DBus ${REQUIRED_QT_VERSION})
-  if (NOT Qt5DBus_FOUND)
+  find_package(Qt6DBus ${REQUIRED_QT_VERSION})
+  if (NOT Qt6DBus_FOUND)
     set(MARBLE_NO_DBUS TRUE)
   endif()
 else()
@@ -170,7 +170,7 @@ endif( WIN32 )
 INCLUDE (CTest)
 ENABLE_TESTING()
 
-option( BUILD_MARBLE_TESTS "Build unit tests" ON )
+option( BUILD_MARBLE_TESTS "Build unit tests" OFF )
 add_feature_info("Unit tests" BUILD_MARBLE_TESTS "Build unit tests. Toggle with BUILD_MARBLE_TESTS=YES/NO. 'make test' will run all.")
 
 if( BUILD_MARBLE_TESTS )
@@ -312,11 +312,11 @@ endif(WIN32)
 
 
 ####################################################
-# Add global ECM & KF5 settings
-set(REQUIRED_ECM_VERSION 1.7.0)
+# Add global ECM & KF6 settings
+set(REQUIRED_ECM_VERSION 5.240.0)
 set(KDE_INSTALL_DIRS_NO_DEPRECATED TRUE)
 set(KDE_SKIP_UNINSTALL_TARGET ON CACHE BOOL "KDE uninstall target must be disabled")
-set(REQUIRED_KF5_MIN_VERSION 5.7.0)
+set(REQUIRED_KF6_MIN_VERSION 5.240.0)
 
 find_package(ECM ${REQUIRED_ECM_VERSION} QUIET)
 if(ECM_FOUND)
diff --git a/src/lib/marble/CMakeLists.txt b/src/lib/marble/CMakeLists.txt
index 6bba085799..e6b143f756 100644
--- a/src/lib/marble/CMakeLists.txt
+++ b/src/lib/marble/CMakeLists.txt
@@ -714,7 +714,7 @@ QT.Marble.depends = ${PRI_DEPS}
 )
 
 # detect which folder the pri file should be installed into
-get_target_property(QMAKE_EXECUTABLE Qt5::qmake LOCATION)
+get_target_property(QMAKE_EXECUTABLE Qt6::qmake LOCATION)
 
 function(query_qmake result_variable qt_variable)
     execute_process(
diff --git a/src/lib/marble/declarative/CMakeLists.txt b/src/lib/marble/declarative/CMakeLists.txt
index 5a7db78918..2a52bd67e2 100644
--- a/src/lib/marble/declarative/CMakeLists.txt
+++ b/src/lib/marble/declarative/CMakeLists.txt
@@ -1,9 +1,9 @@
 PROJECT( MarbleDeclarativePlugin )
 
-find_package(Qt5 ${REQUIRED_QT_VERSION} OPTIONAL_COMPONENTS Positioning)
-if(Qt5Positioning_FOUND)
-    add_definitions(-DHAVE_QT5_POSITIONING)
-endif(Qt5Positioning_FOUND)
+find_package(Qt6 ${REQUIRED_QT_VERSION} OPTIONAL_COMPONENTS Positioning)
+if(Qt6Positioning_FOUND)
+    add_definitions(-DHAVE_QT6_POSITIONING)     # PORT_QT6
+endif(Qt6Positioning_FOUND)
 
 INCLUDE_DIRECTORIES(
     ${CMAKE_CURRENT_SOURCE_DIR}
diff --git a/src/lib/marble/declarative/Placemark.cpp b/src/lib/marble/declarative/Placemark.cpp
index ee20a26435..fb9b8e1853 100644
--- a/src/lib/marble/declarative/Placemark.cpp
+++ b/src/lib/marble/declarative/Placemark.cpp
@@ -5,10 +5,10 @@
 
 #include "Placemark.h"
 
-#ifdef HAVE_QT5_POSITIONING
+#ifdef HAVE_QT6_POSITIONING
 #include <GeoDataExtendedData.h>
 #include <QGeoAddress>
-#endif // HAVE_QT5_POSITIONING
+#endif // HAVE_QT6_POSITIONING
 
 #include <osm/OsmPlacemarkData.h>
 #include "GeoDataStyle.h"
@@ -661,7 +661,7 @@ void Placemark::append(QString &target, const QString &value)
 
 QString Placemark::addressFromOsmData() const
 {
-#ifdef HAVE_QT5_POSITIONING
+#ifdef HAVE_QT6_POSITIONING
     QGeoAddress address;
     OsmPlacemarkData const data = m_placemark.osmData();
     address.setCountry(data.tagValue("addr:country"));
diff --git a/src/plugins/positionprovider/CMakeLists.txt b/src/plugins/positionprovider/CMakeLists.txt
index ec2ba1a9c3..ba4c983238 100644
--- a/src/plugins/positionprovider/CMakeLists.txt
+++ b/src/plugins/positionprovider/CMakeLists.txt
@@ -8,14 +8,14 @@ IF(LIBGPS_FOUND)
      ADD_SUBDIRECTORY( gpsd )
 ENDIF(LIBGPS_FOUND)
 
-find_package(Qt5 ${REQUIRED_QT_VERSION}
+find_package(Qt6 ${REQUIRED_QT_VERSION}
     OPTIONAL_COMPONENTS
         Positioning
 )
 marble_set_package_properties( Qt5Positioning PROPERTIES DESCRIPTION "a collection of APIs and frameworks" )
 marble_set_package_properties( Qt5Positioning PROPERTIES URL "https://www.qt.io/developers/" )
 marble_set_package_properties( Qt5Positioning PROPERTIES TYPE OPTIONAL PURPOSE "position information via Qt5Positioning" )
-if(Qt5Positioning_FOUND)
+if(Qt6Positioning_FOUND)
    ADD_SUBDIRECTORY( qtpositioning )
 endif()
 
-- 
GitLab

